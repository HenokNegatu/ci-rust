name: Rust CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Run tests
        run: cargo test --all-features --verbose

      - name: Build Release
        run: cargo build --release --all-features --verbose

      - name: Zip Release (Non-Windows)
        if: runner.os != 'Windows'
        run: |
          mkdir -p artifacts
          zip -r artifacts/release-${{ matrix.os }}.zip target/release/

      - name: Zip Release (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir artifacts
          Compress-Archive -Path target/release/* -DestinationPath artifacts/release-windows-latest.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          path: artifacts/release-${{ matrix.os }}.zip

  release-project:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' # Only release on main
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts

      - name: List downloaded artifacts
        run: ls -R all-artifacts

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.run_number }}
          name: "Release ${{ github.run_number }}"
          artifacts: |
            all-artifacts/release-ubuntu-latest/release-ubuntu-latest.zip
            all-artifacts/release-macos-latest/release-macos-latest.zip
            all-artifacts/release-windows-latest/release-windows-latest.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
